from elasticsearch import Elasticsearch

# Initialize the Elasticsearch client
es = Elasticsearch(['http://localhost:9200'])

# Define the index and query
index_name = 'your_index_name'
query = {
    "query": {
        "match_all": {}
    }
}

# Initialize the scroll
response = es.search(
    index=index_name,
    body=query,
    scroll='2m',  # Scroll timeout (2 minutes in this example)
    size=1000     # Number of documents per batch
)

# Get the scroll ID
scroll_id = response['_scroll_id']
total_hits = response['hits']['total']['value']
retrieved_hits = len(response['hits']['hits'])

print(f"Total hits: {total_hits}")

# Process the first batch of results
for hit in response['hits']['hits']:
    # Print the document as a dictionary
    print(hit['_source'])



# Continue scrolling until there are no more results
while retrieved_hits < total_hits:
    response = es.scroll(scroll_id=scroll_id, scroll='2m')
    scroll_id = response['_scroll_id']
    hits = response['hits']['hits']

    if not hits:
        break

    retrieved_hits += len(hits)

    # Process each batch of results
    for hit in hits:
        # Print the document as a dictionary
        print(hit['_source'])

# Clear the scroll context to free resources
es.clear_scroll(scroll_id=scroll_id)



class Cache:
    def __init__(self, max_size=10):
        self.max_size = max_size
        self.cache = []

    def add_entry(self, key, value):
        if len(self.cache) >= self.max_size:
            self.cache.pop(0)  # Remove the oldest entry
        self.cache.append({key: value})

    def get_value(self, key):
        for entry in reversed(self.cache):
            if key in entry:
                return entry[key]
        return None  # Key not found in cache

# Example usage:
cache = Cache(max_size=10)
cache.add_entry("key1", "value1")
cache.add_entry("key2", "value2")
cache.add_entry("key3", "value3")

print(cache.cache)  # [{'key1': 'value1'}, {'key2': 'value2'}, {'key3': 'value3'}]

print(cache.get_value("key1"))  # Output: value1
print(cache.get_value("key4"))  # Output: None (key4 not found)
